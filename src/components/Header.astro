---
interface Props {
  variant?: "default" | "home";
}
const { variant = "default" } = Astro.props;
import { Image } from "astro:assets";
import logoDefault from "../assets/logo.svg";
import logoSmallDefault from "../assets/logo-small.svg";
import logoDark from "../assets/logo-dark.svg";
import logoSmallDark from "../assets/logo-small-dark.svg";
import { Menu } from "@lucide/astro";
import Dropdown from "./Dropdown.astro";
import { ModeToggle } from "@/components/ModeToggle";

const headerClasses = {
  default: "bg-gray-50 shadow-md",
  home: "bg-black/10 backdrop-filter backdrop-blue",
}[variant];

const navActiveClasses = "nav-active text-logo-orange-600";
const navLinkClasses = {
  default: "text-black hover:text-logo-orange-600",
  home: "text-white hover:text-logo-orange-600",
}[variant];

const showLogo = variant == "default";
const logo = variant == "default" ? logoDefault : logoDark;
const logoSmall = variant == "default" ? logoSmallDefault : logoSmallDark;
const currentPath = Astro.url.pathname;
const navItems = [
  { label: "acerca", href: "/acerca" },
  { label: "cronograma", href: "/cronograma" },
  { label: "patrocinadores", href: "/patrocinadores" },
  { label: "cÃ³digo de conducta", href: "/codigo-de-conducta" },
].map((item) => ({
  ...item,
  classes: item.href === currentPath ? navActiveClasses : "",
}));
---

<header
  class:list={[
    "fixed top-0 w-[100%] h-[var(--header-height)]",
    "flex items-center justify-between px-4 py-2",
    "border-solid z-10",
    headerClasses,
  ]}
>
  <div id="header-logo" class="grow-1 basis-0">
    <a href="/">
      <div class="hidden lg:block">
        <Image src={logo} height="64" alt="Logo CIPC" />
      </div>
      <div class="block lg:hidden">
        <Image src={logoSmall} height="64" alt="Logo CIPC" />
      </div>
    </a>
  </div>
  <nav class="font-mono">
    <ul class="hidden lg:flex gap-0">
      {
        navItems.map((item) => (
          <li>
            <a
              class:list={[
                "nav-link",
                "text-xs sm:text-sm lg:text-lg",
                navLinkClasses,
                item.classes,
              ]}
              href={item.href}
            >
              {item.label}
            </a>
          </li>
        ))
      }
    </ul>
  </nav>
  <div class="flex justify-end grow-1 basis-0" id="header-right">
    {variant !== "home" && <ModeToggle client:load />}
    <nav class="lg:hidden">
      <Dropdown items={navItems} id="testid" itemClass="font-mono">
        <Menu
          class:list={[
            "w-12 h-12",
            variant == "home" ? "text-logo-negative" : "",
          ]}
        />
      </Dropdown>
    </nav>
  </div>

  <style>
    .nav-link {
      position: relative;
    }
    .nav-link::before {
      content: "[";
      margin-right: -0.7rem;
      visibility: hidden;
    }
    .nav-link::after {
      content: "]";
      margin-left: -0.7rem;
      visibility: hidden;
    }
    .nav-link:hover::before,
    .nav-active::before {
      visibility: visible;
    }
    .nav-link:hover::after,
    .nav-active::after {
      visibility: visible;
    }
  </style>
</header>
